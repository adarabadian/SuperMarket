{"version":3,"sources":["./src/app/modules/routing.module.ts","./src/app/models/UserRegisterDetails.ts","./src/app/pipes/CategoryPipe.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/checkout-complete/checkout-complete.component.ts","./src/app/components/checkout-complete/checkout-complete.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/environments/environment.ts","./src/app/models/OrderDetails.ts","./src/app/components/product-modal/product-modal.component.ts","./src/app/components/product-modal/product-modal.component.html","./src/app/pipes/SearchPipe.ts","./src/app/services/orders.service.ts","./src/app/interceptors/AuthenticationInterceptor.ts","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/models/Product.ts","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/services/products.service.ts","./src/app/components/page404-component/page404-component.component.ts","./src/app/components/page404-component/page404-component.component.html","./src/app/guards/admin.guard.ts","./src/app/components/customer/customer.component.ts","./src/app/components/customer/customer.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/admin-product-modal/admin-product-modal.component.ts","./src/app/components/admin-product-modal/admin-product-modal.component.html","./src/app/services/cart.service.ts","./src/app/components/advanced-register/advanced-register.component.ts","./src/app/components/advanced-register/advanced-register.component.html","./src/app/components/categories-list/categories-list.component.ts","./src/app/components/categories-list/categories-list.component.html","./src/app/modules/shared.module.ts","./src/app/services/user.service.ts","./src/app/components/all-products/all-products.component.ts","./src/app/components/all-products/all-products.component.html","./src/app/components/product-card/product-card.component.ts","./src/app/components/product-card/product-card.component.html","./src/app/guards/customer.guard.ts","./src/app/modules/app.module.ts","./src/app/models/UserLoginDetails.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../components/login/login.component';\nimport { RegisterComponent } from '../components/register/register.component';\nimport { AdvancedRegisterComponent } from '../components/advanced-register/advanced-register.component';\nimport { CustomerComponent } from '../components/customer/customer.component';\nimport { Page404Component } from '../components/page404-component/page404-component.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { AllProductsComponent } from '../components/all-products/all-products.component';\nimport { CustomerGuard } from '../guards/customer.guard';\nimport { CheckoutComponent } from '../components/checkout/checkout.component';\nimport { CheckoutCompleteComponent } from '../components/checkout-complete/checkout-complete.component';\nimport { AdminGuard } from '../guards/admin.guard';\nimport { AdminModule } from './admin.module';\n\nconst routes: Routes = [\n  { path: \"admin\",  canActivate:[ AdminGuard ], loadChildren: './admin.module#AdminModule'},\n  { path: \"login\", component: LoginComponent },\n  { path: \"allproducts\", component: AllProductsComponent },\n  { path: \"customer\",  canActivate:[CustomerGuard], component: CustomerComponent },\n  { path: \"checkout\",  canActivate:[CustomerGuard], component: CheckoutComponent },\n  { path: \"checkout-complete\",  canActivate:[CustomerGuard], component: CheckoutCompleteComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"advanced-register\", component: AdvancedRegisterComponent },\n\n  {path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n\n\n  { path: \"**\", component: Page404Component }\n];\n\n@NgModule({\n    declarations: [\n      \n    ],\n    imports: [\n      CommonModule,\n      RouterModule.forRoot(routes) // Importing the above routes\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n\nexport class RoutingModule {\n\n }\n","export class UserRegisterDetails{\r\n    public constructor(\r\n        public id?                :number,\r\n        public email?             :string,\r\n        public password?          :string,\r\n        public passwordVerification?:string,\r\n        public city?              :string,\r\n        public street?            :string,\r\n        public firstName?         :string,\r\n        public lastName?          :string,\r\n    ){}\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Product } from '../models/Product';\r\n\r\n@Pipe({\r\n    name: 'categoryPipe'\r\n})\r\nexport class CategoryPipe implements PipeTransform {\r\n\r\n    transform(products: Product[], categoryName: string): any {\r\n        // In this example we filter all coupons whose price is about 350\r\n        return products.filter(product => product.category.includes(categoryName));\r\n    }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/models/Product';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\nimport { AdminProductModalComponent } from '../admin-product-modal/admin-product-modal.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public userService: UserService, private cartService: CartService, public router: Router, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getUserFirstName();\n  }\n\n  public openNewModelProduct(): void {\n    // set empty product\n    this.dialog.open(AdminProductModalComponent, {\n      data: { product: new Product(0, \"\", undefined, 0, '/assets/noPicture.png') },\n    });\n  }\n\n\n  // get username to show on header\n  public getUserFirstName(): void {\n    let userName = localStorage.getItem(\"marketFirstName\");\n    this.userService.firstName = userName;\n  }\n\n  // log user out\n  public logOut = async () => {\n    const observable = this.userService.logOutUser();\n\n    observable.subscribe(successfulServerRequestData => {\n      // clear session storage so he wont have useless data and wont be able to login until he relogs\n      localStorage.clear();\n\n      this.emptyUserCartOnLogout();\n\n      this.userService.firstName = \"Guest\";\n\n      // move to login page\n      this.router.navigate([\"/login\"]);\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      });\n    })\n  }\n\n  private emptyUserCartOnLogout = () => {\n    // emmpty user cart\n    this.cartService.userCart = new Map();\n  }\n}\n","<div id=\"headerContainer\">\n\n    <div id=\"cartButton\" class=\"buttonsDivs\"\n        *ngIf=\"userService.userType != 'ADMIN' && router.url != '/login' && router.url != '/register' && router.url != '/advanced-register'\">\n        <app-cart></app-cart>\n    </div>\n\n    <div id=\"adminButton\" class=\"buttonsDivs\"\n        *ngIf=\"userService.userType == 'ADMIN' && router.url != '/login' && router.url != '/register' && router.url != '/advanced-register'\">\n        <button (click)=\"openNewModelProduct()\">Add Product</button>\n    </div>\n\n    <div id=\"header\">\n        <div id=\"leftHeaderDiv\">\n            <img src=\"/assets/logo.png\">\n        </div>\n\n        <div>\n            <h1 class=\"helloHeader\" *ngIf=\"userService.firstName == undefined\">\n                Hello Guest\n            </h1>\n            <h1 class=\"helloHeader\" *ngIf=\"userService.firstName != undefined\">\n                Hello {{userService.firstName+\"\"}}\n            </h1>\n        </div>\n\n        <div id=\"aboutContainer\">\n            <div id=\"picturesContainer\">\n                <a href=\"tel: +972525109880\"><img src=\"/assets/phone.png\"></a>\n                <a\n                    href=\"mailto:adarabadian@gmail.com?subject = Contact about AdarMarket&body = I really liked your site\"><img\n                        src=\"/assets/email.png\"></a>\n                <a href=\"https://discordapp.com/users/253959767389765632\"><img src=\"/assets/discord.png\"></a>\n            </div>\n\n            <h3>Contact Us</h3>\n        </div>\n    </div>\n\n    <div class=\"buttonsDivs\"\n        *ngIf=\"router.url != '/login' && router.url != '/register' && router.url != '/advanced-register'\">\n        <button id=\"logOutButton\" (click)=\"logOut()\">Logout</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-checkout-complete',\n  templateUrl: './checkout-complete.component.html',\n  styleUrls: ['./checkout-complete.component.css']\n})\nexport class CheckoutCompleteComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public goToMainPage(){\n    this.router.navigate([\"/customer\"]);\n  }\n\n}\n","<div id=\"checkoutSuccessComponent\">\n    <h1>Thank you!</h1>\n    <h2>Thanks for choosing us! <br>Your purchase was successful!<br>Your invoice has been downloaded.</h2>\n    <img src=\"/assets/logo.png\">\n    <button (click)=\"goToMainPage()\">Go To Main Page</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<section>\n    <header>\n        <app-header></app-header>\n    </header>\n    \n    <main>\n        <router-outlet></router-outlet>\n    </main>\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class OrderDetails{\r\n    public constructor(      \r\n        public city?:         string,\r\n        public street?:       string,\r\n        public deliveryDate?: Date,\r\n        public creditCard?:   number\r\n    ){}\r\n\r\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Product } from 'src/app/models/Product';\nimport { ProductCardComponent } from '../product-card/product-card.component';\n\n@Component({\n  selector: 'app-product-modal',\n  templateUrl: './product-modal.component.html',\n  styleUrls: ['./product-modal.component.css']\n})\nexport class ProductModalComponent implements OnInit {\n  public product : Product;\n  public productCardComponent : any;\n  public userType : string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, public dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.product = this.data.product; \n    this.productCardComponent = this.data.productCardComponent; \n    this.userType = this.data.productCardComponent.userType; \n  }\n\n  closeModal():void{\n    this.dialog.closeAll();\n  }\n\n  public addToCart():void{\n    // this function receives the prodCartComponent and executes functions from it\n    this.productCardComponent.addToCart(this.product);\n    this.closeModal();\n  }\n}\n","<div id=\"productModal\">\n    <h1>\n        {{product.name}}\n    </h1>\n\n    <img src=\"{{product.picture}}\">\n\n    <h2>\n        Category: {{product.category}}\n    </h2>\n    \n    <h2>\n        Price: {{product.price}}₪\n    </h2>\n        \n    <button id=\"addButton\" *ngIf=\"userType == 'CUSTOMER'\" (click)=(addToCart())>\n        Add to cart\n    </button>\n    \n    <button (click)=\"closeModal()\">\n        Close Window\n    </button>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Product } from '../models/Product';\r\n\r\n@Pipe({\r\n    name: 'searchPipe'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n    transform(products: any, userSearch: string): any {\r\n        // if in checkout component products will be map instead of array so  this is converting products to array and then filtering\r\n        if (!Array.isArray(products)) {\r\n            return Array.from(products.values()).filter((product: Product) => product.name.toUpperCase().includes(userSearch.toUpperCase()));\r\n        }\r\n        \r\n        return products.filter(product => product.name.toUpperCase().includes(userSearch.toUpperCase()));\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(private http: HttpClient) { }\n\n  public isShowFirstOrderMessage(): Observable<boolean> {\n    return this.http.get<boolean>(\"https://adarmarket.onrender.com/orders/isFirstOrder\");\n  }\n\n  \n  public getOrdersAmount(): Observable<number> {\n    return this.http.get<number>(\"https://adarmarket.onrender.com/orders/getOrdersAmount\");\n  }\n  \n  \n  public order(deliveryDetails): Observable<any> {\n    return this.http.post<any>(\"https://adarmarket.onrender.com/orders\", deliveryDetails);\n  }\n    \n\n  public sendInvoiceEmail(doc): Observable<any> {\n    return this.http.post<any>(\"https://adarmarket.onrender.com/orders/sendInvoiceEmail\", doc);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationInterceptor implements HttpInterceptor {\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with our token if available\r\n        let token: string;\r\n        token = localStorage.getItem(\"token\");\r\n        \r\n        if (token) {     \r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: \"Bearer \" + token\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { jsPDF } from 'jspdf';\nimport { Toast } from 'ngx-toastr';\nimport { OrderDetails } from 'src/app/models/OrderDetails';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrdersService } from 'src/app/services/orders.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n// declare var jsPDF: any;\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  public deliveryFormGroup: FormGroup;\n\n  public city: FormControl;\n  public street: FormControl;\n  public deliveryDate: FormControl;\n  public creditCard: FormControl;\n\n  public minDate: Date;\n  public isDeliveryDateValid: boolean;\n\n  public search: string;\n\n\n  @ViewChild('tableToSave') tableToSave: ElementRef;\n\n  constructor(public cartService: CartService, private userService: UserService, private router: Router, private ordersService: OrdersService) { }\n\n  ngOnInit(): void {\n    if (this.cartService.userCart.size == 0) {\n      this.router.navigate([\"/customer\"]);\n    }\n\n    this.setMinimumDate();\n\n    this.search = \"\";\n\n    this.city = new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(15)]);\n    this.street = new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(15), Validators.pattern(\"^[a-zA-Z\\s\\u05D0-\\u05EA'0-9_ \\s]*$\")]);\n    this.deliveryDate = new FormControl(\"\", [Validators.required]);\n    this.creditCard = new FormControl(\"\", [Validators.required, Validators.min(10000000), Validators.max(99999999999999999999)]);\n\n    this.deliveryFormGroup = new FormGroup({\n      city: this.city,\n      street: this.street,\n      deliveryDate: this.deliveryDate,\n      creditCard: this.creditCard\n    });\n\n    this.getUserAddress();\n  }\n\n  // set minimum date for date input\n  private setMinimumDate() {\n    this.minDate = new Date();\n\n    // minimum date is one at least from tomorrow\n    this.minDate.setDate(this.minDate.getDate() + 1);\n\n    // remove hours from date \n    this.minDate.setHours(0, 0, 0, 0);\n  }\n\n  // get user address from server to set its value as default address value on checkout screen\n  private getUserAddress(): void {\n    const observable = this.userService.getUserAddress();\n\n    observable.subscribe(successfulServerRequestData => {\n      // set the values gotten from server\n      this.city.setValue(successfulServerRequestData.City);\n      this.street.setValue(successfulServerRequestData.Street);\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      });\n    })\n  }\n\n  public validateDate(): void {\n    let delDate = new Date(this.deliveryDate.value).getTime();\n    let minDate = this.minDate.getTime();\n\n    // if delivery date is not before tomorrow then set delivery date as false,\n    // if its false then user won't be able to continue\n    if (minDate >= delDate) {\n      this.isDeliveryDateValid = false;\n      return;\n    }\n\n    this.isDeliveryDateValid = true;\n  }\n\n  // function that sums all prices to show on checkout component below the table\n  public calculateCart(): string {\n    let totalCartPrice = 0;\n\n    // sum all products prices\n    this.cartService.userCart.forEach((values: any, keys) => {\n      totalCartPrice = totalCartPrice + (values.price * values.amount)\n    });\n\n    let priceToShow = totalCartPrice.toFixed(2);\n    return priceToShow;\n  }\n\n  // return to previous page\n  public returnToProducts() {\n    this.router.navigate([\"/customer\"]);\n  }\n\n  // checkout function\n  public checkout() {\n    // set object to send to server\n    let deliveryDetails = new OrderDetails(this.city.value, this.street.value, this.deliveryDate.value, this.creditCard.value);\n\n    const observable = this.ordersService.order(deliveryDetails);\n    observable.subscribe(successfulServerRequestData => {\n      // download invoice as pdf for user\n      this.downloadInvoice();\n\n      // empty the user cart's\n      this.cartService.userCart = new Map();\n\n      // move to next page\n      this.router.navigate([\"/checkout-complete\"]);\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        });\n      })\n  }\n\n  private async downloadInvoice(): Promise<void> {\n    // set doc as PDF page\n    let doc = new jsPDF(\"p\", \"mm\", \"a4\");\n\n    // add the header for the doc, when the response returns it will replace the doc\n    doc = this.addPdfHeader(doc);\n\n    // add the body for the doc, when the response returns it will replace the doc\n    let addBodyFunctionResult = this.addPdfBody(doc);\n\n    // set the doc as the first index of the result of the last row\n    doc = addBodyFunctionResult[0];\n\n    // set the row height to continue from as the second index of the result of the last row\n    let lastRowHeight = addBodyFunctionResult[1];\n\n    // add the logo and footer for the doc, when the response returns it will replace the doc\n    doc = this.addLogoToPdf(doc, lastRowHeight);\n\n    // download the final pdf\n    doc = doc.save('AdarMarket - Invoice.pdf');\n  }\n\n  private addPdfHeader(doc) {\n    doc.text('AdarMarket - Invoice', 80, 20);\n\n    // format the order date before adding it \n    let today: any = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = dd + '/' + mm + '/' + yyyy;\n\n    // add the bill to + name to top left\n    doc.text(\"Bill To: \" + this.userService.firstName, 5, 10);\n\n    // add the date to top left\n    doc.text(today, 175, 10);\n\n    // the table headers\n    doc.text('Name', 10, 40);\n    doc.text('Price', 65, 40);\n    doc.text('Amount', 120, 40);\n    doc.text('Total Price', 175, 40);\n\n    // return the updated doc\n    return doc;\n  }\n\n  // add body to pdf, returns the position of the last row that it stopped in and the updated doc\n  addPdfBody(doc) {\n    let rowHeight = 50;\n    let totalPurchasePrice = 0;\n\n    // for each product print a row\n    this.cartService.userCart.forEach(product => {\n      // create horizontal line\n      doc.line(5, rowHeight - 8, 205, rowHeight - 8);\n\n      doc.text(product.name, 10, rowHeight);\n      doc.text((+product.price).toFixed(2) + \" NIS\", 65, rowHeight);\n      doc.text(product.amount + \"\", 120, rowHeight);\n      doc.text((product.price * product.amount).toFixed(2) + \" NIS\", 175, rowHeight);\n\n      // while looping through products get total price\n      totalPurchasePrice = totalPurchasePrice + +product.price * product.amount;\n\n      // increase row height\n      rowHeight = rowHeight + 10;\n\n      // if row is too low it will be cut so open a new page\n      if (rowHeight + 55 >= doc.internal.pageSize.height) {\n        doc.addPage();\n        rowHeight = 7 // Restart height position\n      }\n    });\n\n    // add Total Purchase Price\n    doc.text('Total Purchase Price: ' + totalPurchasePrice.toFixed(2) + ' NIS', 68, rowHeight + 5);\n\n    // need to return both row height for image and the doc because the function changed it\n    return [doc, rowHeight]\n  }\n\n  private addLogoToPdf(doc, rowHeight) {\n    const logo = new Image();\n\n    logo.src = 'assets/logo.png';\n\n    // add the thanks message on bottom\n    doc.text('Thanks for buying from us!', 75, rowHeight + 20);\n\n    // add the image on bottom\n    doc.addImage(logo, 'png', 45, rowHeight + 25, 125, 50);\n\n    // return the updated doc\n    return doc;\n  }\n}\n","<div id=\"checkoutComponent\">\n  <h1>Checkout</h1>\n\n  <a id=\"searchText\">Search Product:</a><input id=\"searchInput\" placeholder=\"Search here\" type=\"text\"\n    [(ngModel)]=\"search\">\n\n  <table #tableToSave>\n    <thead>\n      <tr>\n        <th>Picture</th>\n        <th>Name</th>\n        <th>Amount</th>\n        <th>Price</th>\n        <th>Total</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"card-body\" *ngFor=\"let item of cartService.userCart| searchPipe : search | keyvalue \">\n        <td>\n          <img src={{item.value.picture}}>\n        </td>\n        <td>\n          {{item.value.name}}\n        </td>\n        <td>\n          {{item.value.amount}}\n        </td>\n        <td>\n          {{item.value.price}}₪\n        </td>\n        <td class=\"totalPrice\">\n          {{item.value.amount*item.value.price}}₪\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <a id=\"totalPrice\">Total Cart Price: {{calculateCart()}}₪</a>\n\n\n\n  <h1 id=\"deliveryHeader\">Delivery Details</h1>\n\n  <form #deliveryForm=\"ngForm\" (submit)=\"checkout()\" [formGroup]=\"deliveryFormGroup\" ngNativeValidate>\n    <div>\n      <a><i>City:</i></a><br>\n      <input type=\"text\" placeholder=\"City\" name=\"city\" [formControl]=\"city\"><br>\n      <span *ngIf=\"city.errors && !city.pristine\">City must be 3 to 15 letters.</span><br>\n\n      <a><i>Street Address:</i></a><br>\n      <input type=\"text\" placeholder=\"Street\" name=\"street\" [formControl]=\"street\"><br>\n      <span *ngIf=\"!street.valid && !street.pristine\">Please fill valid street and number.</span><br>\n    </div>\n\n    <div>\n      <a><i>Delivery Date:</i></a><br>\n      <input type=\"date\" name=\"deliveryDate\" min=\"{{this.minDate | date:'yyyy-MM-dd'}}\" id=\"dateInput\"\n        (change)=\"validateDate()\" [formControl]=\"deliveryDate\"><br>\n      <span *ngIf=\"deliveryDate.touched && !isDeliveryDateValid\">Delivery Date must be in the future.</span><br>\n\n      <a><i>Credit Card:</i></a><br>\n      <input type=\"number\" placeholder=\"Credit Card\" name=\"creditCard\" [formControl]=\"creditCard\"><br>\n      <span *ngIf=\"creditCard.errors?.min || creditCard.errors?.max\">Credit Card must be between 8 to 20\n        digits.</span><br>\n\n    </div>\n  </form>\n\n  <div id=\"buttonsContainer\">\n    <button (click)=\"checkout()\" type=\"submit\" [disabled]=\"!deliveryForm.form.valid || isDeliveryDateValid == false\">\n      <a>Check Out </a><img src=\"/assets/checkoutIcon.png\"></button><br>\n\n    <button (click)=\"returnToProducts()\"><a>Go Back </a><img src=\"/assets/backIcon.png\"></button>\n  </div>\n</div>","import { types } from \"util\"\r\n\r\nexport class Product{\r\n    public constructor(\r\n        public id?:       number,\r\n        public name?:     string,\r\n        public category?: any,\r\n        public price?:    any,\r\n        public picture?:  any\r\n    ){}\r\n    // product category and pictures are any because admin functions need to use them in several types.\r\n    // for example, if uploading Product, an ID (number) will be sent\r\n}","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/services/cart.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  public isCollapsed: boolean;\n  public cartBtnText: string;\n  public currentWindowWidth: number;\n  public isCartEnabled: boolean;\n\n  constructor(public cartService: CartService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.isCollapsed = true;\n    this.cartBtnText = \"Open Cart\";\n    this.calculateCart();\n  }\n\n  public toggleCart(): void {\n    // should be available only from customer\n    if (this.router.url != '/customer') {\n      return;\n    }\n\n    // switch isCollapsed state\n    this.isCollapsed = !this.isCollapsed;\n\n    // set button text\n    if (this.isCollapsed) {\n      this.cartBtnText = \"Open Cart\";\n    }\n    else {\n      this.cartBtnText = \"Close Cart\";\n    }\n  }\n\n  // empty user cart\n  public emptyUserCart(): void {\n    const observable = this.cartService.emptyUserCart();\n    observable.subscribe(successfulServerRequestData => {\n      // set user cart as new user cart after the server succeeded emptying the user's cart\n      this.cartService.userCart = new Map();\n\n      // close cart modal\n      this.toggleCart();\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        });\n      })\n  }\n\n  public checkout(): void {\n    // if cart is empty then dont checkout, just show err message and return\n    if (this.cartService.userCart.size == 0) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops... your cart is empty!',\n        text: 'Please fill your cart first'\n      })\n      return;\n    }\n\n    // close cartModal\n    this.toggleCart();\n\n    // move to checkout page\n    this.router.navigate([\"/checkout\"]);\n  }\n\n  // calculate cart is used to show total price on cart\n  public calculateCart(): string {\n    let totalCartPrice = 0;\n\n    // sum all products\n    this.cartService.userCart.forEach((values: any, keys) => {\n      totalCartPrice = totalCartPrice + (values.price * values.amount)\n    });\n\n    // add 2 decimals \n    let priceToShow = totalCartPrice.toFixed(2);\n\n    // return the result\n    return priceToShow;\n  }\n\n  // remove the product from user cart map on client and from db\n  public deleteProduct(key): void {\n    const observable = this.cartService.deleteProductFromCart(key);\n\n    observable.subscribe(successfulServerRequestData => {\n      // remove the key of the product from user cart (type map)\n      this.cartService.userCart.delete(key);\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      });\n    });\n  }\n\n  // after user changed the product's amount update it accordingly \n  public updateItemAmount(event: any, id: number) {\n    let amountInputValue = event.target.value;\n    this.cartService.userCart.get(id).amount = amountInputValue;\n\n    // if the product is empty or 0 just delete it from cart\n    if (amountInputValue == 0) {\n      this.deleteProduct(id);\n      return;\n    }\n\n    // update the amount on server\n    const observable = this.cartService.updateProductAmount(id, amountInputValue);\n    observable.subscribe(successfulServerRequestData => {\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      });\n    });\n  }\n}\n","<div>\n  <div id=\"cartButton\" [class.disabled-content]=\"this.router.url != '/customer'\" (click)=\"toggleCart()\">\n    {{cartBtnText}}\n  </div>\n\n  <div id=\"cartList\" [hidden]=isCollapsed>\n    <table>\n      <thead>\n        <th class=\"pictureTh\">Picture</th>\n        <th>Name</th>\n        <th>Amount</th>\n        <th>Price</th>\n        <th class=\"totalTh\">Total</th>\n        <th>Delete</th>\n      </thead>\n\n      <tbody class=\"productsTableBody\">\n        <tr class=\"card-body\" *ngFor=\"let item of cartService.userCart | keyvalue\">\n          <td class=\"pictureTd\">\n            <img src={{item.value.picture}}>\n          </td>\n          <td>\n            {{item.value.name}}\n          </td>\n          <td>\n            <input type=\"number\" min=\"1\" max=\"99\" (blur)=\"updateItemAmount($event, item.key)\"\n              oninput=\"validity.valid||(value='');\" [(ngModel)]=\"item.value.amount\">\n          </td>\n          <td>\n            {{item.value.price}}₪\n          </td>\n          <td class=\"totalPrice\">\n            {{(item.value.amount*item.value.price).toFixed(2)}}₪\n          </td>\n          <td>\n            <button class=\"deleteButton\" (click)=\"deleteProduct(item.key)\">Delete product</button>\n          </td>\n        </tr>\n      </tbody>\n\n      <!-- if user cart empty -->\n      <div id=\"cartMessage\" *ngIf=\"(cartService.userCart.size < 1)\">\n        Your cart is empty! Please add more items to continue.\n      </div>\n\n    </table>\n    <table>\n      <tbody>\n\n        <tr id=\"totalPriceContainer\">\n          <td>\n            Total cart price: {{calculateCart()}}₪\n          </td>\n        </tr>\n\n        <tr id=\"buttonsContainer\">\n          <td class=\"buttonsDiv\">\n            <button (click)=\"checkout()\"><a>Checkout</a><img src=\"/assets/checkoutIcon.png\"></button>\n          </td>\n          <td class=\"buttonsDiv\">\n            <button (click)=\"emptyUserCart()\"><a>Empty Cart</a><img src=\"/assets/garbageIcon.png\"></button>\n          </td>\n        </tr>\n      </tbody>\n\n    </table>\n\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/Product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  public allProducts : Product[];\n  public filterByCategory: string;\n   \n  constructor(private http: HttpClient) {\n    this.allProducts = [];\n   }\n\n  \n  public getAllProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(\"https://adarmarket.onrender.com/products\");\n  }\n  \n  public getProductsAmount(): Observable<number> {\n    return this.http.get<number>(\"https://adarmarket.onrender.com/products/getProductsAmount\");\n  }\n\n  public getAllProductCategories(): Observable<any> {\n    return this.http.get<any>(\"https://adarmarket.onrender.com/products/getAllCategories\");\n  }\n  \n  public addNewProduct(productToUpload: Product): Observable<any> {\n    return this.http.post<any>(\"https://adarmarket.onrender.com/products/\", productToUpload);\n  }\n    \n  public updateProduct(productToUpload: Product): Observable<any> {\n    return this.http.put<any>(\"https://adarmarket.onrender.com/products/\", productToUpload);\n  }   \n\n  public uploadPictureToServer(data): Observable<any> {\n    return this.http.post<any>(\"https://adarmarket.onrender.com/products/uploadPicture\", data, {});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page404-component',\n  templateUrl: './page404-component.component.html',\n  styleUrls: ['./page404-component.component.css']\n})\nexport class Page404Component implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public redirectUser(): void{\n    // navigate user to login , if he has token he will be logged in automaticly\n    this.router.navigate([\"/login\"]);\n  }\n}\n","<div id=\"Page404\">\n    <h1>\n        We are sorry, but you got into a dead end.\n    </h1>\n    <img src=\"/assets/DeadEnd.jpg\">\n\n    <br>\n\n    <button (click)=\"redirectUser()\">Return</button>\n</div>","import { Injectable, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n    public constructor(private router: Router) { }\n\n    public canActivate(): boolean {\n        const userType = localStorage.getItem(\"userType\");\n        if (userType == \"ADMIN\") {\n            return true;\n        }\n\n        this.router.navigateByUrl(\"/login\");\n        return false;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrdersService } from 'src/app/services/orders.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  public filter: string;\n  public search: string;\n  public isFirstOrder: boolean;\n\n  constructor(private cartService: CartService, private ordersService: OrdersService, public userService: UserService) { }\n\n  ngOnInit(): void {\n    this.filter = \"\";\n    this.search = \"\";\n    this.isFirstOrder = false;\n    this.userService.userType = \"CUSTOMER\";\n\n    this.isShowFirstOrderMessage();\n    this.getUserCart();\n  }\n\n  // public changeProductPipe(filter):void{\n  //   this.filter = filter;\n  // }\n\n\n  private getUserCart(): void {\n    if (this.cartService.userCart.size == 0) {\n      const observable = this.cartService.getUserCart();\n\n      observable.subscribe(successfulServerRequestData => {\n        if (successfulServerRequestData.length > 0) {\n          this.promptOldCartDialog(successfulServerRequestData);\n        }\n      }, serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        });\n      })\n    }\n  }\n\n  private promptOldCartDialog(successfulServerRequestData) {\n    Swal.fire({\n      title: 'Hey, i found an old cart that belongs to you!',\n      text: \"Do you want to use the old cart or open a new one?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Open new cart',\n      confirmButtonText: 'Restore old cart',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.setUserCartFromServerResponse(successfulServerRequestData);\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Your cart was restored successfuly',\n          timer: 1500\n        }\n        );\n      }\n      else {\n        this.emptyUserCart();\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Your cart was deleted successfuly',\n          timer: 1500\n        }\n        );\n      }\n    })\n  }\n\n  private setUserCartFromServerResponse(successfulServerRequestData): void {\n    successfulServerRequestData.forEach(product => {\n      this.cartService.userCart.set(product.productId, {\n        id: product.productId,\n        price: product.price,\n        amount: product.amount,\n        name: product.name,\n        totalPrice: product.totalPrice,\n        picture: product.picture\n      });\n    });\n  }\n\n  public isShowFirstOrderMessage(): void {\n    // if user came back from checkout screen the message when pop because cart isnt empty\n    if (this.cartService.userCart.size == 0) {\n      const observable = this.ordersService.isShowFirstOrderMessage();\n\n      observable.subscribe(successfulServerRequestData => {\n        this.isFirstOrder = successfulServerRequestData;\n      },\n        serverErrorResponse => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: serverErrorResponse.error.error\n          })\n        })\n    }\n  }\n\n  private emptyUserCart(): void {\n    const observable = this.cartService.emptyUserCart();\n\n    observable.subscribe(successfulServerRequestData => {\n      this.cartService.userCart = new Map();\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        })\n      })\n  };\n\n  public closeFirstOrderModal() {\n    this.isFirstOrder = false;\n  }\n}\n","<div id=\"appCustomer\">\n    <br>\n    \n    <a>Search Product: </a> <input id=\"searchInput\" placeholder=\"Search here\" type=\"text\" [(ngModel)]=\"search\">\n\n    <app-all-products [userType]=\"userService.userType\" [search]=\"search\"></app-all-products>\n\n    <div id=\"firstOrderNotification\" *ngIf=\"isFirstOrder\">\n        <h1>Welcome to your first order!</h1>\n        <button (click)=\"closeFirstOrderModal()\">Thank you</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserLoginDetails } from 'src/app/models/UserLoginDetails';\nimport { OrdersService } from 'src/app/services/orders.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public userLoginDetails: UserLoginDetails;\n\n  public userDetailsForm: FormGroup;\n\n  public email: FormControl;\n  public password: FormControl;\n\n  public productsAmount: number;\n  public ordersAmount: number;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private productsService: ProductsService,\n    private ordersService: OrdersService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userLoginDetails = new UserLoginDetails();\n\n    this.productsAmount = 0;\n    this.ordersAmount = 0;\n\n    this.email = new FormControl(\"\", [Validators.required, Validators.email]);\n    this.password = new FormControl(\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(12)]);\n\n    this.userDetailsForm = new FormGroup({\n      email: this.email,\n      password: this.password\n    });\n\n    this.getOrdersAmount();\n    this.getProductsAmount();\n    this.autoLogin();\n  }\n\n  // get products amount to show to everyone\n  public getProductsAmount(): void {\n    const observable = this.productsService.getProductsAmount();\n\n    observable.subscribe(successfulServerRequestData => {\n      // get the count ID parameter and set it as product amount\n      this.productsAmount = successfulServerRequestData[\"COUNT(ID)\"];\n    }, serverErrorResponse => {console.log(serverErrorResponse.error.error);\n    });\n  }\n\n  // get orders amount from server to show to everyone on login screen\n  public getOrdersAmount(): void {\n    const observable = this.ordersService.getOrdersAmount();\n\n    observable.subscribe(successfulServerRequestData => {\n      // get the count ID parameter and set it as orders amount\n      this.ordersAmount = successfulServerRequestData[\"COUNT(ID)\"];\n    }, serverErrorResponse => \n      {console.log(serverErrorResponse.error.error);\n    })\n  }\n\n  // login function\n  public login(): void {\n    this.userLoginDetails.email = this.email.value\n    this.userLoginDetails.password = this.password.value;\n\n    const observable = this.userService.login(this.userLoginDetails);\n\n    observable.subscribe(successfulServerRequestData => {\n      // set parameters from login response\n      localStorage.setItem(\"token\", successfulServerRequestData.token + \"\");\n      localStorage.setItem(\"marketFirstName\", successfulServerRequestData.firstName + \"\");\n      localStorage.setItem(\"userType\", successfulServerRequestData.userType + \"\");\n      this.userService.firstName = successfulServerRequestData.firstName;\n\n      // if user is admin move to admin , else move to customer\n      if (successfulServerRequestData.userType == \"CUSTOMER\") {\n        this.router.navigate([\"/customer\"]);\n      }\n      if (successfulServerRequestData.userType == \"ADMIN\") {\n        this.router.navigate([\"/admin\"]);\n      }\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      })\n    })\n  }\n\n  // auto login function\n  public autoLogin(): void {\n    // try to login user automaticly when he enters the site\n    let token = localStorage.getItem(\"token\");\n\n    if (token == null || token == \"undefined\") {\n      this.router.navigate([\"/login\"]);\n    }\n    // if token is exists then try to log in\n    else {\n      this.loginWithToken(token);\n    }\n  }\n\n  // login function with token\n  public loginWithToken(token): void {\n    const observable = this.userService.loginWithToken(token);\n    observable.subscribe(successfulServerRequestData => {\n      if (successfulServerRequestData.userType == null || successfulServerRequestData.userType == \"undefined\"){\n        return;\n      }\n      localStorage.setItem(\"userType\", successfulServerRequestData.userType + \"\");\n      localStorage.setItem(\"marketFirstName\", successfulServerRequestData.firstName + \"\");\n      this.userService.firstName = successfulServerRequestData.firstName;\n\n      if (successfulServerRequestData.userType == \"CUSTOMER\") {\n        this.router.navigate([\"/customer\"]);\n      }\n\n      if (successfulServerRequestData.userType == \"ADMIN\") {\n        this.router.navigate([\"/admin\"]);\n      }\n    }, serverErrorResponse => {\n    })\n  }\n\n  public moveToRegister(): void {\n    this.router.navigate([\"/register\"]);\n  }\n}\n","<div id=\"loginContainer\">\n    <form id=\"leftLoginSide\" #loginForm=\"ngForm\" (submit)=\"login()\" [formGroup]=\"userDetailsForm\" ngNativeValidate>\n        <h1>Login</h1>\n        <p><i>Please enter your credentials to login.</i></p>\n        <a>Email:</a> <input type=\"text\" placeholder=\"Email\" name=\"Email\" [formControl]=\"email\"><br><br>\n        <a>Password:</a> <input type=\"password\" placeholder=\"Password\" id=\"passInput\" name=\"password\"\n            [formControl]=\"password\" autocomplete=\"on\"><br><br><br>\n\n        <button type=\"submit\" [disabled]=\"loginForm.form.invalid\">Login</button>\n\n        <p><i>Don't have user? Register here now!</i></p>\n        <button type=\"button\" (click)=\"moveToRegister()\">Register</button>\n\n    </form>\n\n    <div id=\"aboutUsDiv\">\n        <h1>About Us</h1>\n\n        <p>\n            What started small, with a single discount store and the simple idea of selling more for less,\n            has grown over the last 50 years into the largest retailer in the world. Each week, over 265 million\n            customers\n            and members visit approximately 11,400 stores under 55 banners in 26 countries and eCommerce websites.\n            With fiscal year 2020 revenue of $524 billion, AdarMarket employs over 2.2 million associates\n            worldwide.<br><br>\n            AdarMarket continues to be a leader in sustainability, corporate philanthropy and employment opportunity.\n            It’s all part of our unwavering commitment to creating opportunities and bringing value to customers\n            and communities around the world.\n        </p>\n\n        <img src=\"/assets/logo.png\">\n\n        <h3>\n            Did you know? AdarMarket contains up to {{productsAmount}} products<br>\n            And its customers made {{ordersAmount}} orders!\n        </h3>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserRegisterDetails } from 'src/app/models/UserRegisterDetails';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n  public userDetailsForm: FormGroup;\n\n  public id: FormControl;\n  public email: FormControl;\n  public password: FormControl;\n  public passwordVerification: FormControl;\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.id = new FormControl(\"\", [Validators.required, Validators.min(10000000), Validators.max(999999999)]);\n    this.email = new FormControl(\"\", [Validators.required, Validators.email]);\n    this.password = new FormControl(\"\", [Validators.required, Validators.pattern('(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{6,}'),\n    Validators.minLength(6), Validators.maxLength(12)]);\n    this.passwordVerification = new FormControl(\"\", [Validators.required, Validators.pattern('(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{6,}'),\n    Validators.minLength(6), Validators.maxLength(12)]);\n\n    this.userDetailsForm = new FormGroup({\n      id: this.id,\n      email: this.email,\n      password: this.password,\n      passwordVerification: this.passwordVerification\n    });\n  }\n\n  // redirect function\n  public backToLogin(): void {\n    this.router.navigate([\"/login\"]);\n  }\n\n  // move to next register page\n  public next(): void {\n    // update the object that will proceed to the next page\n    this.userService.userRegisterDetails.id = this.id.value;\n    this.userService.userRegisterDetails.email = this.email.value;\n    this.userService.userRegisterDetails.password = this.password.value;\n    this.userService.userRegisterDetails.passwordVerification = this.passwordVerification.value;\n\n    const observable = this.userService.isUserExists(this.id.value, this.email.value);\n\n    observable.subscribe(successfulServerRequestData => {\n      // if user isn't exists redirect to advanced register (register's second page)\n      this.router.navigate([\"/advanced-register\"]);\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      })\n    })\n  }\n\n}\n","<div id=\"registerContainer\">\n    <div id=\"formContainer\">\n        <h1 id=\"registerHeader\">Register</h1>\n\n        <form #registrationForm=\"ngForm\" (submit)=\"next()\" [formGroup]=\"userDetailsForm\" ngNativeValidate>\n            <a><i>ID</i></a>\n            <input type=\"number\" placeholder=\"ID\" name=\"id\" [formControl]=\"id\" >\n            <span *ngIf=\"id.errors && !id.pristine\">ID must be 8 to 9 digits</span>\n        \n            <a><i>Email</i></a>\n            <input type=\"email\" placeholder=\"Email\" name=\"Email\" [formControl]=\"email\">\n            <span *ngIf=\"!email.valid && !email.pristine\" email>Email isn't valid</span>\n        \n        \n            <a><i>Password</i></a>\n            <input type=\"password\" placeholder=\"password\" name=\"password\" maxlength=\"12\" autocomplete=\"off\" [formControl]=\"password\">\n            <span *ngIf=\"password.errors?.minlength\">Password's minimum length is 6</span>\n            <span *ngIf=\"!password.errors?.minlength && password.errors?.pattern\">Password must contain at least 1 letter, 1 uppercase letter and at least 1 number.</span>\n\n            <a><i>Password Verification</i></a>\n            <input type=\"password\" maxlength=\"12\" placeholder=\"Password Verification\" autocomplete=\"off\" [formControl]=\"passwordVerification\" name=\"passwordVerification\">\n            <span *ngIf=\"password.value != passwordVerification.value\">Password's are not identical</span>\n\n            <button type=\"submit\" id=\"submitButton\" [disabled]=\"!registrationForm.form.valid || password.value != passwordVerification.value\">Next</button>\n\n            <a><i>Forgot something?</i></a>\n            <button  type=\"button\" (click)=\"backToLogin()\">Back</button>\n        </form>\n\n    </div>\n    \n</div>\n\n","import { variable } from '@angular/compiler/src/output/output_ast';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Product } from 'src/app/models/Product';\nimport { ProductsService } from 'src/app/services/products.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-admin-product-modal',\n  templateUrl: './admin-product-modal.component.html',\n  styleUrls: ['./admin-product-modal.component.css']\n})\nexport class AdminProductModalComponent implements OnInit {\n  public adminProductForm: FormGroup;\n\n  public productName: FormControl;\n  public productCategory: FormControl;\n  public productPrice: FormControl;\n  public productPicture: any;\n\n  public categories: any;\n\n  public imagePreviewUrl: string;\n\n  public defaultProductCategory: any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public product: any, private productsService: ProductsService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.product = this.product.product;\n    this.categories = [];\n    this.productPicture = \"\";\n\n    this.defaultProductCategory = \"\";\n\n    this.getAllProductCategories();\n\n    this.productName = new FormControl(this.product.name, [Validators.required, Validators.minLength(3), Validators.maxLength(20)]);\n    this.productCategory = new FormControl('', [Validators.required, Validators.min(1)]);\n    this.productPrice = new FormControl(this.product.price, [Validators.required, Validators.min(0.1)])\n    this.adminProductForm = new FormGroup({\n      name: this.productName,\n      category: this.productCategory,\n      price: this.productPrice\n    });\n\n    this.imagePreviewUrl = \"\";\n  }\n\n  closeModal(): void {\n    this.dialog.closeAll();\n  }\n\n\n  public saveProduct() {\n    let productToUpload: Product = {\n      name: this.productName.value,\n      category: +this.productCategory.value,\n      price: +this.productPrice.value,\n    }\n\n    // if user didnt uploaded an image\n    if (this.productPicture == \"\") {\n      productToUpload.picture = this.product.picture;\n\n      // if he is adding new product\n      if (this.product.id > 0) {\n        productToUpload.id = this.product.id;\n        this.updateProduct(productToUpload);\n        return;\n      }\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'You forgot to upload picture!'\n      })\n    }\n    else {\n      productToUpload.picture = this.uploadPictureToServer(productToUpload);\n    }\n  }\n\n  // this adds decimal point\n  public fixNumberDecimals(event): void {\n    this.productPrice.setValue = event.target.valueAsNumber.toFixed(2);\n  }\n\n  // add product function\n  private addProduct(productToUpload: Product): void {\n    const observable = this.productsService.addNewProduct(productToUpload);\n\n    observable.subscribe(newProductId => {\n      // get category name instead of id to save on client\n      productToUpload.category = this.categories.find(category => category.ID == productToUpload.category).Name;\n\n      // need to receive id because admin may want to edit the product immediately after uploading it\n      productToUpload.id = newProductId;\n\n      // this adds decimal point\n      productToUpload.price = parseFloat(productToUpload.price).toFixed(2);\n\n      // push to Array, without the slice the component wont refresh\n      this.productsService.allProducts.push(productToUpload);\n      this.productsService.allProducts = this.productsService.allProducts.slice();\n\n      this.closeModal();\n      this.alertSuccess(productToUpload.name, \" was added successfuly!\");\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        })\n      });\n  }\n\n  private updateProduct(productToUpload: Product) {\n    const observable = this.productsService.updateProduct(productToUpload);\n\n    observable.subscribe(successfulServerRequestData => {\n      // replace original product's name\n      this.product.name = productToUpload.name;\n\n      // get category name instead of id to save on client\n      this.product.category = this.categories.find(category => category.ID == productToUpload.category).Name;\n\n      this.product.price = productToUpload.price.toFixed(2);\n\n      // if image has changed save the new one\n      if (this.imagePreviewUrl.length > 0) {\n        this.product.picture = this.imagePreviewUrl;\n      }\n\n      this.alertSuccess(productToUpload.name, \" was updated successfuly!\");\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      })\n    })\n  }\n\n  // upload picture (using multer)\n  private uploadPictureToServer(productToUpload) {\n    let data = new FormData();\n\n    // if theres a file exists attach it to the data to delete it from server\n    if (this.product.picture != undefined) {\n      data.append('fileToDelete', this.product.picture);\n    }\n\n    // attach the image to data\n    data.append('file', this.productPicture);\n\n    const observable = this.productsService.uploadPictureToServer(data);\n\n    observable.subscribe(multerResponse => {\n      // set the new picture as the response.filename gotten from server\n      productToUpload.picture = multerResponse.filename;\n\n      if (this.product.id > 0) {\n        productToUpload.id = this.product.id;\n        this.updateProduct(productToUpload);\n        return;\n      }\n\n      // callback for add product to save it\n      this.addProduct(productToUpload);\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      })\n    })\n  }\n\n  // get all categories for select list, this is a request instead of hard coded array because categories may change \n  private getAllProductCategories(): void {\n    const observable = this.productsService.getAllProductCategories();\n\n    observable.subscribe(categoriesResult => {\n      // set the categories variable of the class \n      this.categories = categoriesResult;\n\n      // if productId is 0 then its a new product so no need for default category\n      if (this.product.id == 0) {\n        return\n      }\n\n      // set default product category\n      this.defaultProductCategory = categoriesResult.find(category => category.Name == this.product.category);\n      this.productCategory.setValue(this.defaultProductCategory.ID);\n\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      })\n    })\n  }\n\n  // show success message\n  private alertSuccess(productName, message) {\n    Swal.fire({\n      icon: 'success',\n      title: 'SUCCESS!',\n      text: productName + message,\n    });\n\n    this.closeModal();\n  };\n\n  // this function is used to set imagePreviewUrl variable as the picture that was uploaded from the client\n  onPictureAdd(event: any): void {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n\n      reader.onload = (event: any) => {\n        this.imagePreviewUrl = event.target.result;\n      }\n\n      reader.readAsDataURL(event.target.files[0]);\n      this.productPicture = event.target.files[0];\n    }\n  }\n}\n","<div id=\"adminModal\">\n    <form #adminForm=\"ngForm\" (submit)=\"saveProduct()\" [formGroup]=\"adminProductForm\" ngNativeValidate>\n        <h2><i>Product Name</i></h2>\n        <input placeholder=\"Product Name\" class=\"productDetailsInput\" [formControl]=\"productName\" id=\"productNameInput\"\n            name=\"productName\"><br>\n        <span\n            *ngIf=\"productName.errors?.minlength || productName.errors?.maxlength || productName.value.length < 1\">Product\n            name must be between 3 - 20 letters</span><br>\n        <br>\n\n        <h2><i>Product Category</i></h2>\n        <select [formControl]=\"productCategory\" class=\"productDetailsInput\" name=\"productCategory\"><br>\n            <option *ngFor=\"let category of categories\" [value]=\"category.ID\">{{category.Name}}</option>\n        </select><br>\n        <span *ngIf=\"productCategory.value == ''\">Product category is required!</span><br><br>\n\n\n        <h2><i>Product Picture</i></h2>\n        <div id=\"picturesContainer\">\n            <div id=\"leftImage\">\n                Current Image: <br>\n                <img src=\"{{product.picture}}\">\n            </div>\n            <div>\n                Upload A new image:\n                <input type=\"file\" (change)=\"onPictureAdd($event)\" name=\"productPicture\"><br>\n                <img *ngIf=\"imagePreviewUrl != ''\" src=\"{{imagePreviewUrl}}\">\n                <span *ngIf=\"imagePreviewUrl == '' && product.id == 0\">You must include product picture!</span>\n            </div>\n        </div>\n        <br><br>\n\n\n        <h2><i>Product Price in NIS (₪) </i></h2>\n        <input class=\"productDetailsInput\" placeholder=\"Product price\" type=\"number\" pattern=\"^\\d*(\\.\\d{0,2})?$\"\n            step=\"0.01\" [formControl]=\"productPrice\" name=\"productPrice\"><br>\n        <span *ngIf=\"productPrice.errors?.min\">Product price must be at least 0.10₪!</span>\n        <span *ngIf=\"productPrice.errors?.pattern\">Product price can have maximum 2 decimal digits!</span>\n        <span *ngIf=\"productPrice.errors?.required\">Product price is a must field!</span>\n        <br><br>\n\n        <div id=\"buttonsContainer\">\n            <button type=\"submit\" [disabled]=\"adminForm.form.invalid || productPicture =='' && product.id == 0\n             || productCategory.pristine && product.id == 0 \">\n                Save Product\n            </button>\n\n            <button type=\"button\" (click)=\"closeModal()\">\n                Close Window\n            </button>\n        </div>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CartItem } from '../models/CartItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  public userCart :Map<number, CartItem>;\n  \n  constructor(private http: HttpClient) { \n    this.userCart = new Map();\n  }\n\n    \n  public getUserCart(): Observable<[]> {\n    return this.http.get<[]>(\"https://adarmarket.onrender.com/cart\");\n  }\n\n  public createNewCart(): Observable<any> {\n    // happens in register when user have no cart / user just made an order\n    return this.http.post<any>(\"https://adarmarket.onrender.com/cart/createNewCart\",{});\n  }\n\n\n  public addProductToCart(productId, productAmount):Observable <any>{\n    let productToAdd = {\n      \"productId\": productId,\n      \"productAmount\" : productAmount\n    }\n\n    return this.http.post<any>(\"https://adarmarket.onrender.com/cart\", productToAdd);\n  }\n\n  public deleteProductFromCart(productId):Observable <any>{\n    return this.http.delete<any>(\"https://adarmarket.onrender.com/cart/\" + productId);\n  }\n  \n  public emptyUserCart():Observable <any>{\n    return this.http.delete<any>(\"https://adarmarket.onrender.com/cart/emptyUserCart\");\n  }\n  \n\n  public updateProductAmount(productId, productAmount):Observable <any>{\n    let productToUpdate = {\n      \"productId\": productId,\n      \"productAmount\" : productAmount\n    }\n    \n    return this.http.put<any>(\"https://adarmarket.onrender.com/cart/updateProductAmount\", productToUpdate);\n  }\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserLoginDetails } from 'src/app/models/UserLoginDetails';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-advanced-register',\n  templateUrl: './advanced-register.component.html',\n  styleUrls: ['./advanced-register.component.css']\n})\nexport class AdvancedRegisterComponent implements OnInit {\n  public userDetailsForm: FormGroup;\n\n  public street: FormControl;\n  public firstName: FormControl;\n  public lastName: FormControl;\n  public city: FormControl;\n\n  public citys: string[];\n\n\n  constructor(private router: Router, public userService: UserService, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    // just check that user didnt get here without filling some fields from the first register page\n    if (this.userService.userRegisterDetails.password == undefined || this.userService.userRegisterDetails.password == \"\") {\n      this.router.navigate([\"/register\"]);\n    }\n\n    // set citys array\n    this.citys = [\n      \"Tel Aviv\",\n      \"Jerusalem\",\n      \"Azor\",\n      \"Haifa\",\n      \"Holon\",\n      \"Beer Sheva\",\n      \"Eliat\",\n      \"Ramat Gan\",\n      \"Dimona\",\n      \"Kfar Saba\"\n    ];\n\n    this.city = new FormControl(\"\", [Validators.required]);\n    this.street = new FormControl(\"\", [Validators.required, Validators.minLength(4), Validators.maxLength(20)]);\n    this.firstName = new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(12), Validators.pattern(\"^[a-zA-Z'0-9_ \\s]*$\")]);\n    this.lastName = new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(12), Validators.pattern(\"^[a-zA-Z'0-9_ \\s]*$\")])\n    this.userDetailsForm = new FormGroup({\n      city: this.city,\n      street: this.street,\n      firstName: this.firstName,\n      lastName: this.lastName\n    });\n  }\n\n  // used for back button \n  public previousRegister(): void {\n    this.router.navigate([\"/register\"]);\n  }\n\n  // register function\n  public register(): void {\n    // set details \n    this.userService.userRegisterDetails.city = this.city.value;\n    this.userService.userRegisterDetails.street = this.street.value;\n    this.userService.userRegisterDetails.firstName = this.firstName.value;\n    this.userService.userRegisterDetails.lastName = this.lastName.value;\n\n    const observable = this.userService.register(this.userService.userRegisterDetails);\n\n    observable.subscribe(successfulServerRequestData => {\n      // set data gotten on localStorage\n      localStorage.setItem(\"marketFirstName\", successfulServerRequestData.firstName + \"\");\n      localStorage.setItem(\"token\", successfulServerRequestData.token + \"\");\n      this.userService.firstName = successfulServerRequestData.firstName;\n\n      // new user needs new cart, so create cart function\n      this.createNewCart();\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        })\n      })\n  };\n\n  public createNewCart(): void {\n    const observable = this.cartService.createNewCart();\n\n    observable.subscribe(successfulServerRequestData => {\n      // after successfull cart added response, move to main customer page\n      this.router.navigate([\"/customer\"]);\n    },\n      serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        })\n      })\n  }\n}\n","<div id=\"registerContainer\">\n    <div id=\"formContainer\">\n        <h1 id=\"registerHeader\">Register</h1>\n\n        <form #secondRegistrationForm=\"ngForm\" (submit)=\"register()\" [formGroup]=\"userDetailsForm\" ngNativeValidate>\n\n            <a><i>City</i></a>\n            <select placeholder=\"City\" name=\"city\" [formControl]=\"city\">\n                <option *ngFor=\"let city of citys\" value=\"{{city}}\">{{city}}</option>\n            </select>\n\n            <a><i>Street</i></a>\n            <input type=\"text\" placeholder=\"Street\" [formControl]=\"street\" name=\"street\">\n            <span *ngIf=\"street.errors?.minlength || street.errors?.maxlength\">Street must be between 4 - 20\n                letters</span>\n\n            <a><i>First Name</i></a>\n            <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" [formControl]=\"firstName\">\n            <span *ngIf=\"firstName.errors?.minlength || firstName.errors?.maxlength || firstName.errors?.pattern\">First name must be between 3 - 12\n                english letters</span>\n\n            <a><i>Last Name</i></a>\n            <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" [formControl]=\"lastName\">\n            <span *ngIf=\"lastName.errors?.minlength || lastName.errors?.maxlength || lastName.errors?.pattern\">Last name must be between 3 - 12\n                english letters</span>\n\n            <button id=\"submitButton\" type=\"submit\" [disabled]=\"secondRegistrationForm.form.invalid\">Register</button>\n\n            <a><i>Forgot something?</i></a>\n            <button type=\"button\" (click)=\"previousRegister()\">Back</button>\n        </form>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n  public panelOpenState : boolean;\n  public filter : string;\n\n  constructor( ) { }\n\n  ngOnInit(): void {\n    this.filter = '';\n    this.panelOpenState = false;\n  }\n\n  // link to all products component\n  @Output ()\n  childEvent = new EventEmitter<string>();\n  \n  public changeProductPipe(requestedFilter):void{\n    // send the event to all products component\n    this.childEvent.emit(requestedFilter);\n    this.filter = requestedFilter\n  }\n}\n","<mat-accordion>\n  <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n    <mat-expansion-panel-header>\n      <mat-panel-title *ngIf=\"filter == ''\">\n        <a>All Products</a>\n      </mat-panel-title>\n      <mat-panel-title *ngIf=\"filter != ''\">\n        <a>{{filter}}</a>\n      </mat-panel-title>\n\n    </mat-expansion-panel-header>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('')\">All Products</a><br>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('Fruits And Vegetables')\">Fruits &Vegetables</a><br>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('Drinks')\">Drinks</a><br>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('Diary')\">Diary</a><br>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('Dry Food')\">Dry Food</a><br>\n    <a class=\"filterOptions\" (click)=\"changeProductPipe('Meat And Fish')\">Meat & Fish</a>\n  </mat-expansion-panel>\n</mat-accordion>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AllProductsComponent } from '../components/all-products/all-products.component';\nimport { CategoryPipe } from '../pipes/CategoryPipe';\nimport { SearchPipe } from '../pipes/SearchPipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { ProductCardComponent } from '../components/product-card/product-card.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CategoriesListComponent } from '../components/categories-list/categories-list.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n@NgModule({\n    declarations: [ \n      AllProductsComponent,\n      CategoryPipe,\n      SearchPipe,\n      ProductCardComponent,\n      CategoriesListComponent,\n    ],\n    \n    imports: [\n      CommonModule,\n      FormsModule,\n      MatDialogModule,\n      ReactiveFormsModule,\n      MatExpansionModule,\n      SweetAlert2Module.forRoot(), // SweetAlert2Module added\n    ],\n\n    exports:[\n      ProductCardComponent,\n      AllProductsComponent,\n      CategoryPipe,\n      SearchPipe,\n      FormsModule,\n      ReactiveFormsModule,\n      MatDialogModule,\n      CommonModule,\n      CategoriesListComponent,\n      MatExpansionModule,\n    ]\n  })\n\nexport class SharedModule {\n }","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SuccessfulLoginServerResponse } from '../models/SuccessfulLoginServerResponse';\nimport { UserLoginDetails } from '../models/UserLoginDetails';\nimport { UserRegisterDetails } from '../models/UserRegisterDetails';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public userRegisterDetails: UserRegisterDetails;\n  public firstName: string;\n  public userType: string;\n\n  constructor(private http : HttpClient) { \n    this.userRegisterDetails = new UserRegisterDetails();\n    this.firstName = \"Guest\";\n    this.userType = \"\";\n   }\n\n  public register(userRegisterDetails: UserRegisterDetails): Observable<SuccessfulLoginServerResponse> {\n    return this.http.post<SuccessfulLoginServerResponse>(\"https://adarmarket.onrender.com/users\", userRegisterDetails);\n    }\n\n  public login(userLoginDetails: UserLoginDetails):Observable <SuccessfulLoginServerResponse>{\n    return this.http.post<SuccessfulLoginServerResponse>(\"https://adarmarket.onrender.com/users/login\", userLoginDetails);\n  }\n\n  public isUserExists(id: number, email: string):Observable <SuccessfulLoginServerResponse>{\n    let userDetails = {id: id, email: email}\n    return this.http.post<SuccessfulLoginServerResponse>(\"https://adarmarket.onrender.com/users/isUserExists\", userDetails);\n  }\n\n  public logOutUser():Observable <any>{\n    return this.http.post<SuccessfulLoginServerResponse>(\"https://adarmarket.onrender.com/users/logOutUser\", {});\n  }\n\n  public loginWithToken(token):Observable<SuccessfulLoginServerResponse>{\n    return this.http.post<SuccessfulLoginServerResponse>(\"https://adarmarket.onrender.com/users/logUserWithToken\", {\"token\": token});\n  }\n\n  public getUserAddress(): Observable<any> {\n    return this.http.get<any>(\"https://adarmarket.onrender.com/users/getUserAddress\");\n  }\n  \n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/services/products.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-products',\n  templateUrl: './all-products.component.html',\n  styleUrls: ['./all-products.component.css']\n})\n\nexport class AllProductsComponent implements OnInit {\n  public filter: string;\n\n  @Input()\n  search: string;\n\n  @Input()\n  userType: string;\n\n  constructor(public productService: ProductsService) { }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n    this.filter = \"\";\n  }\n\n  // get all products function\n  private getAllProducts(): void {\n    // if already have all products just return\n    if (this.productService.allProducts == []) {\n      return;\n    }\n\n    const observable = this.productService.getAllProducts();\n\n    observable.subscribe(successfulServerRequestData => {\n      // set all products from server response\n      this.productService.allProducts = successfulServerRequestData;\n    }, serverErrorResponse => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: serverErrorResponse.error.error\n      });\n    })\n  }\n\n  public getFilterValue(filterSentFromChild: string) {\n    this.filter = filterSentFromChild;\n  }\n\n}\n","<div id=\"allProductsDiv\">\n    <!-- if chosen all categories then filter will be \"\", so to dispaly all products header i had to put ngIf inside the h1 -->\n    <h1 class=\"categoryHeader\">\n        <app-categories-list (childEvent)=getFilterValue($event)></app-categories-list>\n    </h1>\n\n    <div class=\"cardsContainer\">\n        <app-product-card *ngFor=\"let product of productService.allProducts |categoryPipe : filter |searchPipe : search\"\n            [userType]=\"userType\" [product]=\"product\"></app-product-card>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Product } from 'src/app/models/Product';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\nimport { AdminProductModalComponent } from '../admin-product-modal/admin-product-modal.component';\nimport { ProductModalComponent } from '../product-modal/product-modal.component';\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent implements OnInit {\n\n  @Input()\n  product : Product;\n\n  @Input()\n  userType : string;\n\n  constructor(private cartService: CartService, public userService : UserService, public dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n  }\n\n  public addToCart(product):void{\n    let productToAdd= {\n      id: product.id,\n      name: product.name,\n      price: product.price, \n      amount:0,\n      picture:product.picture\n    }\n\n    // if this product is already in cart\n    if (this.cartService.userCart.has(product.id)){\n      productToAdd.amount = this.cartService.userCart.get(product.id).amount + 1;\n      \n      const observable = this.cartService.updateProductAmount(productToAdd.id, productToAdd.amount);\n      observable.subscribe(successfulServerRequestData => {\n        this.cartService.userCart.set(productToAdd.id, productToAdd);\n      }, serverErrorResponse => {    \n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        });\n      });\n    }\n    else{\n      productToAdd.amount = 1;\n      const observable = this.cartService.addProductToCart(productToAdd.id, productToAdd.amount);\n\n      observable.subscribe(successfulServerRequestData => {\n        this.cartService.userCart.set(productToAdd.id, productToAdd);\n      }, serverErrorResponse => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: serverErrorResponse.error.error\n        })\n      });\n    }\n    Swal.fire({\n      position: 'top-start',\n      icon: 'success',\n      title: productToAdd.name + ' was added to cart\\n Current '+ productToAdd.name + \"s amount is \" + productToAdd.amount,\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  public openProductModal (): void{\n    this.dialog.open(ProductModalComponent, {\n      data: { product: this.product , productCardComponent: this},\n    });\n  }\n\n  public openEditProductModal (): void{\n    this.dialog.open(AdminProductModalComponent, {\n      data: { product: this.product},\n    });\n  }\n\n}\n","<div class=\"productCard\" >\n    <div (click)=\"openProductModal()\">    \n        <img src=\"{{product.picture}}\">\n        <h2>{{product.name}}</h2>\n        <h5>{{product.category}}</h5>\n        <h4>{{product.price}}₪</h4>\n    </div>\n    \n\n    <button *ngIf=\"userType == 'CUSTOMER'\" (click)=\"addToCart(product)\">Add to cart</button>\n    <button *ngIf=\"userType == 'ADMIN'\" (click)=\"openEditProductModal(product)\">Edit Product</button>\n</div>\n","import { Injectable, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomerGuard implements CanActivate {\n\n    public constructor(private router: Router) { }\n\n    public canActivate(): boolean {\n        const userType = localStorage.getItem(\"userType\");\n        if (userType == \"CUSTOMER\") {\n            return true;\n        }\n\n        this.router.navigateByUrl(\"/login\");\n        return false;\n    }\n\n }\n","import { NgModule } from '@angular/core';\nimport { LayoutComponent } from '../components/layout/layout.component';\nimport { HeaderComponent } from '../components/header/header.component';\nimport { RoutingModule } from './routing.module';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RegisterComponent } from '../components/register/register.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { AdvancedRegisterComponent } from '../components/advanced-register/advanced-register.component';\nimport { CustomerComponent } from '../components/customer/customer.component';\nimport { Page404Component } from '../components/page404-component/page404-component.component';\nimport { AuthenticationInterceptor } from '../interceptors/AuthenticationInterceptor';\nimport { SharedModule } from './shared.module';\nimport { CartComponent } from '../components/cart/cart.component';\nimport { CheckoutComponent } from '../components/checkout/checkout.component';\nimport { CheckoutCompleteComponent } from '../components/checkout-complete/checkout-complete.component';\nimport { ProductModalComponent } from '../components/product-modal/product-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AdvancedRegisterComponent,\n    LayoutComponent,\n    HeaderComponent,\n    CustomerComponent,\n    Page404Component,\n    CartComponent,\n    CheckoutComponent,\n    CheckoutCompleteComponent,\n    ProductModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    RouterModule,\n    SharedModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    // Customer didnt got his own module because he is probably going to log in to \"CUSTMER\" account anyway\n    // for img gallery\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true }\n  ],\n  bootstrap: [LayoutComponent],\n  \n})\nexport class AppModule { }\n","export class UserLoginDetails{\r\n    public constructor(\r\n        public email?:string,\r\n        public password?:string,\r\n    ){}\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/modules/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./admin.module\": [\n\t\t\"+cuU\",\n\t\t\"admin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"zn8P\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":"webpack:///"}